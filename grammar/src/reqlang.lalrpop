use token::Token;
use errors::ErrorS;
use ast;

grammar;

pub Document: ast::Document =
  <_shebang:(<shebang>"\n")?>
  "---" "\n"
  <request:Request>
  "---" "\n" => ast::Document {
    request
  };

Request: ast::Request =
  <verb:verb>" "<target:url>" "<http_version:http_version>"\n"
  <headers:Headers>
  => ast::Request {
      verb,
      target,
      http_version,
      headers
    };

Headers: Vec<(String, String)> = <(<header>"\n")*> => <>;

extern {
  type Location = usize;
  type Error = ErrorS;

  enum Token {
    " " => Token::SP,
    "\n" => Token::NL,
    shebang => Token::Shebang,
    http_version => Token::HttpVersion(<String>),
    verb => Token::Verb(<String>),
    url => Token::Url(<String>),
    header => Token::HeaderKeyValue(<(String, String)>),
    "---" => Token::TripleDash,
  }
}